//
// Generated file, do not edit! Created by opp_msgc 4.2 from node/AdversarialInjectionMessage.msg.
//

#ifndef _ADVERSARIALINJECTIONMESSAGE_M_H_
#define _ADVERSARIALINJECTIONMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>node/AdversarialInjectionMessage.msg</tt> by opp_msgc.
 * <pre>
 * packet AdversarialInjectionMessage {
 *     int path[];
 * }
 * </pre>
 */
class AdversarialInjectionMessage : public ::cPacket
{
  protected:
    int *path_var; // array ptr
    unsigned int path_arraysize;

  private:
    void copy(const AdversarialInjectionMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AdversarialInjectionMessage&);

  public:
    AdversarialInjectionMessage(const char *name=NULL, int kind=0);
    AdversarialInjectionMessage(const AdversarialInjectionMessage& other);
    virtual ~AdversarialInjectionMessage();
    AdversarialInjectionMessage& operator=(const AdversarialInjectionMessage& other);
    virtual AdversarialInjectionMessage *dup() const {return new AdversarialInjectionMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setPathArraySize(unsigned int size);
    virtual unsigned int getPathArraySize() const;
    virtual int getPath(unsigned int k) const;
    virtual void setPath(unsigned int k, int path);
};

inline void doPacking(cCommBuffer *b, AdversarialInjectionMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, AdversarialInjectionMessage& obj) {obj.parsimUnpack(b);}


#endif // _ADVERSARIALINJECTIONMESSAGE_M_H_
