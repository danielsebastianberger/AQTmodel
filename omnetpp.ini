[General]
**.timeSlotLength = 1ms  # =timeslot length
sim-time-limit = 100s
**.frameCapacity = 1000 #uniform queue size


## Basic Adversary Types ##

[Config APlusMinor]
network = networks.APlusMinor
**.initialSetSize = ${1,2,5,10,20,50}
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "APlusMinor"
**.packetLength = 1250 bytes
**.randomization.meanrate = 10Mbps
**.randomization.stdrate = 0bps
APlusMinor.A.app.result-recording-modes = all
APlusMinor.D.**.result-recording-modes = -
APlusMinor.E.app.result-recording-modes = all
APlusMinor.B.**.result-recording-modes = -
APlusMinor.F.app.result-recording-modes = all
APlusMinor.C.app.result-recording-modes = all
APlusMinor.adversary.result-recording-modes = all
**.gaussianInjTime = "0 0"

[Config BB]
network = networks.BB
**.initialSetSize = 100
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "BB"
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"

[Config Diaz]
network = networks.Diaz
**.initialSetSize = ${1,2,5,10,20,50}
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "Diaz"
**.packetLength = 1250 bytes
**.randomization.meanrate = 10Mbps
**.randomization.stdrate = 0bps
Diaz.n**.**.result-recording-modes = -
Diaz.m1.**.result-recording-modes = -
Diaz.m4.**.result-recording-modes = -
Diaz.m5.**.result-recording-modes = -
Diaz.m6.**.result-recording-modes = -
Diaz.m2.app.result-recording-modes = all
Diaz.m2.queue**.result-recording-modes = -
Diaz.m3.app.result-recording-modes = all
Diaz.m3.queue**.result-recording-modes = -
Diaz.adversary.result-recording-modes = -
**.gaussianInjTime = "0 0"

[Config Lotker]
network = networks.Lotker
**.injectionRate = 0.65
**.adType = "Lotker"
**.initialSetSize = 2965
**.packetLength = 1250 bytes
**channel.result-recording-modes = -
**routing.result-recording-modes = -
**queue**.result-recording-modes = -
**.app**.result-recording-modes = -
Lotker.adversary.result-recording-modes = all
sim-time-limit = 200s
**.gaussianInjTime = "0 0"

### new adversary proposals by Berger et al.

[Config CE3]
network = networks.CE3
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "CE3"
**.initialSetSize = 100
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"

[Config CE71]
network = networks.CE71
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "CE71"
**.initialSetSize = 20
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"


## imperfect adversary node synchronization

[Config iaBB]
network = networks.BB
**.initialSetSize = 20
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "BB"
**.packetLength = 1250 bytes
**.gaussianInjTime = ${"1 0.25","0.953 0.56","0.3 1.155"}
repeat = 20

[Config iaCE3]
network = networks.CE3
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "CE3"
**.initialSetSize = 20
**.packetLength = 1250 bytes
**.gaussianInjTime = ${"1 0.25","0.953 0.56","0.3 1.155"}
repeat = 20

[Config iaCE71]
network = networks.CE71
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "CE71"
**.initialSetSize = 20
**.packetLength = 1250 bytes
**.gaussianInjTime = ${"1 0.25","0.953 0.56","0.3 1.155"}
repeat = 20




### daniel test cases increasing std

[Config stdBB]
seed-set= ${repcounter=0..49}
#repeat = 50
network = networks.VarBB
**.initialSetSize = 100
**.adType = "BB"
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"
**.injectionRate = 0.98
**.channel.weibull = ${"1.00011337149704 4572.58534958128","1.0428009653983 12.2236721154185","1.09490919571181 4.56755309558084","1.12909303812172 2.11293524505323","1.09121177973747 1.35481139050286","1.00211007417785 1.00502908934898","0.776603082777113 0.687768168545669","0.578671405866438 0.544740293324356","0.431857671656165 0.464284835360771","0.327095549101585 0.412626050812166","0.197991537527883 0.349577064172628","0.12803879129312 0.311988285120545","0.086097798568866 0.28579857775313","0.0622442049239359 0.268244974891359","0.0450116385513571 0.253259425155269","0.0342297572827815 0.242171231693004","0.0267175098712238 0.233153940601465","0.021342706458466 0.225685039441808","0.0171883108876038 0.219042548935925","0.0139006611994606 0.21299051457065","0.0115887224783672 0.208131824103005","0.00966180966764411 0.203546334555448","0.00819543760380631 0.199610009176396","0.00694249787617325 0.195832364469966","0.00598925443003208 0.192615468921487","0.00510549020370097 0.189285360833617","0.00443260476313747 0.186457746721898","0.00393182636376161 0.184138981159748","0.00347275016653662 0.181812506637943","0.00300992630186557 0.179225218885533","0.0027276815110417 0.177494973679125","0.00239284521968427 0.175255143435007","0.00216107621875013 0.173562969557513","0.00193976909950114 0.171812922501746","0.00174423827832816 0.170134999028793","0.00158062800730758 0.168612770172892","0.00143363114761666 0.167138681051021"}


[Config stdCE3]
seed-set= ${repcounter=0..49}
#repeat = 50
network = networks.VarCE3
**.initialSetSize = 100
**.adType = "CE3"
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"
**.channel.weibull = ${"1.00011337149704 4572.58534958128","1.0428009653983 12.2236721154185","1.09490919571181 4.56755309558084","1.12909303812172 2.11293524505323","1.09121177973747 1.35481139050286","1.00211007417785 1.00502908934898","0.776603082777113 0.687768168545669","0.578671405866438 0.544740293324356","0.431857671656165 0.464284835360771","0.327095549101585 0.412626050812166","0.197991537527883 0.349577064172628","0.12803879129312 0.311988285120545","0.086097798568866 0.28579857775313","0.0622442049239359 0.268244974891359","0.0450116385513571 0.253259425155269","0.0342297572827815 0.242171231693004","0.0267175098712238 0.233153940601465","0.021342706458466 0.225685039441808","0.0171883108876038 0.219042548935925","0.0139006611994606 0.21299051457065","0.0115887224783672 0.208131824103005","0.00966180966764411 0.203546334555448","0.00819543760380631 0.199610009176396","0.00694249787617325 0.195832364469966","0.00598925443003208 0.192615468921487","0.00510549020370097 0.189285360833617","0.00443260476313747 0.186457746721898","0.00393182636376161 0.184138981159748","0.00347275016653662 0.181812506637943","0.00300992630186557 0.179225218885533","0.0027276815110417 0.177494973679125","0.00239284521968427 0.175255143435007","0.00216107621875013 0.173562969557513","0.00193976909950114 0.171812922501746","0.00174423827832816 0.170134999028793","0.00158062800730758 0.168612770172892","0.00143363114761666 0.167138681051021"}
**.injectionRate = 0.98



[Config stdCE71]
seed-set= ${repcounter=0..49}
#repeat = 50
network = networks.VarCE71
**.initialSetSize = 100
**.adType = "CE71"
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"
**.channel.weibull = ${"1.00011337149704 4572.58534958128","1.0428009653983 12.2236721154185","1.09490919571181 4.56755309558084","1.12909303812172 2.11293524505323","1.09121177973747 1.35481139050286","1.00211007417785 1.00502908934898","0.776603082777113 0.687768168545669","0.578671405866438 0.544740293324356","0.431857671656165 0.464284835360771","0.327095549101585 0.412626050812166","0.197991537527883 0.349577064172628","0.12803879129312 0.311988285120545","0.086097798568866 0.28579857775313","0.0622442049239359 0.268244974891359","0.0450116385513571 0.253259425155269","0.0342297572827815 0.242171231693004","0.0267175098712238 0.233153940601465","0.021342706458466 0.225685039441808","0.0171883108876038 0.219042548935925","0.0139006611994606 0.21299051457065","0.0115887224783672 0.208131824103005","0.00966180966764411 0.203546334555448","0.00819543760380631 0.199610009176396","0.00694249787617325 0.195832364469966","0.00598925443003208 0.192615468921487","0.00510549020370097 0.189285360833617","0.00443260476313747 0.186457746721898","0.00393182636376161 0.184138981159748","0.00347275016653662 0.181812506637943","0.00300992630186557 0.179225218885533","0.0027276815110417 0.177494973679125","0.00239284521968427 0.175255143435007","0.00216107621875013 0.173562969557513","0.00193976909950114 0.171812922501746","0.00174423827832816 0.170134999028793","0.00158062800730758 0.168612770172892","0.00143363114761666 0.167138681051021"}
**.injectionRate = 0.98








## channel delay randomization with weibull distribution
[Config cdBB]
network = networks.VarBB
**.initialSetSize = 20
**.adType = "BB"
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"
#**.channel.weibull = ${"1.0954 4.5402","1.1295 2.1009","1.091 1.3472","1 0.99","0.57458 0.5422","0.324 0.4107"} #25%,50%,75%,100%,200%,300%
**.channel.weibull = ${"1.1295 2.1009","1 0.99","0.57458 0.5422","0.324 0.4107"} #50%,100%,200%,300%
**.injectionRate = ${0.8..1.0 step 0.01}
repeat = 20

[Config cdCE3]
network = networks.VarCE3
**.adType = "CE3"
**.initialSetSize = 20
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"
**.channel.weibull = ${"1.1295 2.1009","1 0.99","0.57458 0.5422","0.324 0.4107"} #50%,100%,200%,300%
**.injectionRate = ${0.8..1.0 step 0.01}
repeat = 20

[Config cdCE71]
network = networks.VarCE71
**.initialSetSize = 20
**.adType = "CE71"
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0"
**.channel.weibull = ${"1.1295 2.1009","1 0.99","0.57458 0.5422","0.324 0.4107"} #50%,100%,200%,300%
**.injectionRate = ${0.8..1.0 step 0.01}
repeat = 20



## 2nd order randomization: randomize both adversary and network channels

[Config drBB]
network = networks.VarBB
**.initialSetSize = 20
**.adType = "BB"
**.packetLength = 1250 bytes
**.gaussianInjTime = ${"1 0.25","0.953 0.56","0.3 1.155"}
**.channel.weibull = ${"1.0954 4.5402","1.1295 2.1009","1 0.99","0.57458 0.5422","0.324 0.4107"} #25%,50%,100%,200%,300%
**.injectionRate = ${0.8..1.0 step 0.01}
**.datarate = 10Mbps
repeat = 20

[Config drCE3]
network = networks.VarCE3
**.initialSetSize = 20
**.adType = "CE3"
**.packetLength = 1250 bytes
**.gaussianInjTime = ${"1 0.25","0.953 0.56","0.3 1.155"}
**.channel.weibull = ${"1.0954 4.5402","1.1295 2.1009","1 0.99","0.57458 0.5422","0.324 0.4107"} #25%,50%,100%,200%,300%
**.injectionRate = ${0.8..1.0 step 0.01}
**.datarate = 10Mbps
repeat = 20

[Config drCE71]
network = networks.VarCE71
**.initialSetSize = 20
**.adType = "CE71"
**.packetLength = 1250 bytes
**.gaussianInjTime = ${"1 0.25","0.953 0.56","0.3 1.155"} #25%,50%,75%
**.channel.weibull = ${"1.0954 4.5402","1.1295 2.1009","1 0.99","0.57458 0.5422","0.324 0.4107"} #25%,50%,100%,200%,300%
**.injectionRate = ${0.8..1.0 step 0.01}
**.datarate = 10Mbps
repeat = 20



## test case

[Config testcase]
network = networks.VarBB
**.initialSetSize = 20
**.adType = "BB"
**.packetLength = 1250 bytes
**.gaussianInjTime = "0 0" #${"1 0", "1 0.25","0.953 0.56","0.3 1.155"}
**.channel.weibull = ${"1.1295 2.1009","1 0.99","0.57458 0.5422","0.324 0.4107"} #50%,100%,200%,300%
**.injectionRate = 1#${0.9,1.0}
**.datarate = 10Mbps
**.result-recording-modes = all
repeat = 1




## Special Adversaries - in development ##

[Config stochCE3]
network = networks.CE3
**.adType = "CE3"
#**.result-recording-modes = all
**.injectionRate = ${0.89..1.0 step 0.01}
#**.initialSetSize = ${1,2,5,8,10,20}
**.initialSetSize = 20
#remember: 1ms=timeslot length, and usually we have 10 Mbps channels with 1250 byte packages
**.timeSlotLength = 1ms  # =timeslot length, and we have 10 Mbps channels
**.packetLength = 1250 bytes
repeat = 50

[Config stochCE71]
network = networks.CE71
**.adType = "CE71"
#**.result-recording-modes = all
**.injectionRate = ${0.76..1.0 step 0.01}
#**.initialSetSize = ${1,2,5,8,10,20}
**.initialSetSize = 20
#remember: 1ms=timeslot length, and usually we have 10 Mbps channels with 1250 byte packages
**.timeSlotLength = 1ms  # =timeslot length, and we have 10 Mbps channels
**.packetLength = 1250 bytes
repeat = 50


## unpublished adversaries

[Config CE75]
network = networks.CE75
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "CE75"
#record-eventlog = true

[Config CF3]
network = networks.CE3
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "CF3"

[Config CE7]
network = networks.CE7
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "CE7"

[Config CF7]
network = networks.CE7
**.injectionRate = ${0.8..1.0 step 0.01}
**.adType = "CF7"











## OLD-Style Adversaries ##

#[Config CE3half]
#network = networks.CE3half
#**.injectionRate = ${0.8..1.0 step 0.01}

#[Config CE7half]
#network = networks.CE7half
#**.injectionRate = ${0.8..1.0 step 0.01}

#[Config BBhalf]
#network = networks.BB
#**.injectionRate = 1.0
#**.adType = "BBhalf"








